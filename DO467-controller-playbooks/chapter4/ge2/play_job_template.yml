- name: Tower Machine Credentials Role Playbook
  hosts: localhost
  gather_facts: no

  tasks:
  #- name: Run Lab script
  #  import_tasks: lab_script.yml

  # - name: Add credential via command Line
  #   shell: >
  #           tower-cli job_template create
  #           --name "DEV webservers setup" 
  #           --credential "Developers" --job-type "run"
  #           --description "Setup apache on DEV webservers" 
  #           --inventory "Dev" --playbook "apache-setup.yml"
  #           --become-enabled true  --project "My Webservers DEV"
  #           --tower-host "tower.lab.example.com" --tower-username "admin"
  #           --tower-password "redhat" --insecure
  #           

  #  


  # - name: Assign permissions (role) to Developers Team
  #   shell: > 
  #           tower-cli role grant 
  #           --team 'Developers' --job-template "DEV webservers setup"  
  #           --type 'admin'
  #           --tower-host "tower.lab.example.com" --tower-username "admin" 
  #           --tower-password "redhat" --insecure

  - name: Create Survey Job template via tower_job_template module
    ansible.controller.job_template:
      name: "Database setup Survey"
      description: "Setup database servers"
      job_type: "run"
      inventory: "DB Inventory"
      project: "DB Project"
      playbook: "create_samples_db.yml"
      credentials:
        - "Developers"
      # become_enabled: "true"
      survey_spec: "{{ lookup('ansible.builtin.file','./oursurvey.yml') | from_yaml }}"
      # survey_enabled: true
      state: "present"
      controller_config_file: "./controller_cli.cfg"

  - name: Create Job template via tower_job_template module
    ansible.controller.job_template:
      name: "Database setup"
      description: "Setup database servers"
      execution_environment: "Ansible Engine 2.9 execution environment"
      job_type: "run"
      inventory: "DB Inventory"
      project: "DB Project"
      playbook: "create_samples_db.yml"
      credentials:
        - "Developers"
      # become_enabled: "true"
      state: "present"
      controller_config_file: "./controller_cli.cfg"
    register: job_template_output
  
  - name: Print job_template_output
    debug:
      var: job_template_output

  - name: Assign permissions (role) to "Database setup" template
    ansible.controller.role:
      job_template: "Database setup"
      team: "Developers"
      role: "admin"
      state: "present"
      controller_config_file: "./controller_cli.cfg"





  - name: Launch Job {{ job_template_info.name }}
    ansible.controller.job_launch:
      job_template: "Database setup"
      controller_host: https://controller.lab.example.com
      controller_password: redhat123
      controller_username: daniel
      validate_certs: false
      # controller_config_file: "./controller_cli.cfg"
    register: job_output
   
  ####   Check Job ID and other information  
   
  - name: Print job status
    debug:
      var: job_output
   
  #### Wait and Monitor status of previous launched job
   
  - name: Wait for job max 120s
    ansible.controller.job_wait:
      job_id: "{{ job_output.id }}"
      timeout: 120
      controller_config_file: "./controller_cli.cfg"
    register: check_status
   
  ####   Check Final Status of Job and Time taken to execute 
   
  - name: Job Status Information
    ansible.builtin.debug:
      msg: "Time Taken = {{ check_status.elapsed }}    Job ID = {{ check_status.id }}   Job Status = {{ check_status.status }}"
  


  # - name: Create Job Template via asset file
  #   tower_send:
  #     assets: "{{ lookup('file','asset_template_DEV_ftpservers_setup.yml') }}"
  #     tower_config_file: "./tower_cli.cfg"

  # - name: Run Job template via tower-cli
  #   shell: >
  #           tower-cli job launch 
  #           --job-template "DEV ftpservers setup" --monitor 
  #           --tower-host "tower.lab.example.com" --tower-username "daniel"  
  #           --tower-password "redhat123" --insecure
